{"ast":null,"code":"var _jsxFileName = \"/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/TreeComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport styles from \"./TreeComponent.module.css\";\nimport CenteredTree from \"./CenteredTree\";\n\nconst checkSender = el => {\n  if (el.name === \"Top Level\") {\n    return el;\n  }\n};\n\nconst TreeComponent = () => {\n  const _ref = [],\n        nodes = _ref[0],\n        setNodes = _ref[1];\n  useEffect(() => {\n    fetch(\"http://192.168.43.70:5000/transfer\", {\n      method: \"GET\"\n    }).then(function (response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n\n      return response.json();\n    }).then(function (data) {\n      const newNodes = [];\n      console.log(data);\n      data.forEach(element => {\n        fetch(\"http://192.168.43.70:5000/transfers\", {\n          method: \"POST\",\n          body: JSON.stringify(element)\n        }).then(function (response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n\n          return response.json();\n        }).then(function (data) {\n          console.log(data);\n        });\n      });\n    });\n  }, []); //addArrayEntry();\n\n  return React.createElement(\"div\", {\n    className: styles.tree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CenteredTree, {\n    data: myTreeData,\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \";\");\n};\n\nexport default TreeComponent;","map":{"version":3,"sources":["/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/TreeComponent.js"],"names":["React","useEffect","useState","Tree","styles","CenteredTree","checkSender","el","name","TreeComponent","nodes","setNodes","fetch","method","then","response","status","Error","json","data","newNodes","console","log","forEach","element","body","JSON","stringify","tree","myTreeData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,WAAW,GAAGC,EAAE,IAAI;AACxB,MAAIA,EAAE,CAACC,IAAH,KAAY,WAAhB,EAA6B;AAC3B,WAAOD,EAAP;AACD;AACF,CAJD;;AAMA,MAAME,aAAa,GAAG,MAAM;AAAA,eACA,EADA;AAAA,QACnBC,KADmB;AAAA,QACZC,QADY;AAG1BV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE;AADkC,KAAvC,CAAL,CAGGC,IAHH,CAGQ,UAASC,QAAT,EAAmB;AACvB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KARH,EASGJ,IATH,CASQ,UAASK,IAAT,EAAe;AACnB,YAAMC,QAAQ,GAAG,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAA,MAAAA,IAAI,CAACI,OAAL,CAAaC,OAAO,IAAI;AACtBZ,QAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3CC,UAAAA,MAAM,EAAE,MADmC;AAE3CY,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,OAAf;AAFqC,SAAxC,CAAL,CAIGV,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvB,cAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,kBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,iBAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,SATH,EAUGJ,IAVH,CAUQ,UAASK,IAAT,EAAe;AACnBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,SAZH;AAaD,OAdD;AAeD,KA3BH;AA4BD,GA7BQ,EA6BN,EA7BM,CAAT,CAH0B,CAkC1B;;AACA,SACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACwB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEC,UAApB;AAAgC,IAAA,WAAW,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,MADF;AAKD,CAxCD;;AA0CA,eAAepB,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport styles from \"./TreeComponent.module.css\";\nimport CenteredTree from \"./CenteredTree\";\n\nconst checkSender = el => {\n  if (el.name === \"Top Level\") {\n    return el;\n  }\n};\n\nconst TreeComponent = () => {\n  const [nodes, setNodes] = [];\n\n  useEffect(() => {\n    fetch(\"http://192.168.43.70:5000/transfer\", {\n      method: \"GET\"\n    })\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data) {\n        const newNodes = [];\n        console.log(data);\n        data.forEach(element => {\n          fetch(\"http://192.168.43.70:5000/transfers\", {\n            method: \"POST\",\n            body: JSON.stringify(element)\n          })\n            .then(function(response) {\n              if (response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n              }\n              return response.json();\n            })\n            .then(function(data) {\n              console.log(data);\n            });\n        });\n      });\n  }, []);\n\n  //addArrayEntry();\n  return (\n    <div className={styles.tree}>\n      <CenteredTree data={myTreeData} orientation=\"vertical\" />;\n    </div>\n  );\n};\n\nexport default TreeComponent;\n"]},"metadata":{},"sourceType":"module"}