{"ast":null,"code":"var _jsxFileName = \"/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/TreeComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport styles from \"./TreeComponent.module.css\";\nimport CenteredTree from \"./CenteredTree\";\nimport { exportDefaultSpecifier } from \"@babel/types\";\n\nconst checkSender = el => {\n  if (el.name === \"Top Level\") {\n    return el;\n  }\n};\n\nconst myTreeData = [{\n  name: \"Top Level\",\n  nodeSvgShape: {\n    shape: \"circle\",\n    shapeProps: {\n      fill: \"green\",\n      r: 10\n    }\n  },\n  children: [{\n    name: \"Level 2: A\",\n    nodeSvgShape: {\n      shape: \"circle\",\n      shapeProps: {\n        fill: \"green\",\n        r: 10\n      }\n    },\n    prestigeGraph: [{\n      x: 1,\n      y: 10\n    }, {\n      x: 2,\n      y: 20\n    }, {\n      x: 3,\n      y: 15\n    }, {\n      x: 4,\n      y: 30\n    }],\n    children: [{\n      name: \"Level 3: A\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"orange\",\n          r: 10\n        }\n      },\n      children: [{\n        name: \"Level 4: A\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"orange\",\n            r: 10\n          }\n        }\n      }],\n      prestigeGraph: [{\n        x: 1,\n        y: 7\n      }, {\n        x: 2,\n        y: 18\n      }, {\n        x: 3,\n        y: 11\n      }, {\n        x: 4,\n        y: 14\n      }]\n    }, {\n      name: \"Level 3: B\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"yellow\",\n          r: 10\n        }\n      },\n      children: [{\n        name: \"Level 4: B\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"red\",\n            r: 10\n          }\n        }\n      }, {\n        name: \"Level 4: C\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"yellow\",\n            r: 10\n          }\n        }\n      }, {\n        name: \"Level 4: D\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"orange\",\n            r: 10\n          }\n        }\n      }],\n      prestigeGraph: [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 6\n      }, {\n        x: 3,\n        y: 12\n      }, {\n        x: 4,\n        y: 20\n      }]\n    }, {\n      name: \"Level 3: C\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"orange\",\n          r: 10\n        }\n      },\n      children: [{\n        name: \"Level 4: E\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"red\",\n            r: 10\n          }\n        }\n      }, {\n        name: \"Level 4: F\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"yellow\",\n            r: 10\n          }\n        }\n      }, {\n        name: \"Level 4: G\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"orange\",\n            r: 10\n          }\n        }\n      }, {\n        name: \"Level 4: H\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"orange\",\n            r: 10\n          }\n        }\n      }],\n      prestigeGraph: [{\n        x: 1,\n        y: 1\n      }, {\n        x: 2,\n        y: 1\n      }, {\n        x: 3,\n        y: 15\n      }, {\n        x: 4,\n        y: 16\n      }]\n    }]\n  }, {\n    name: \"Level 2: B\",\n    nodeSvgShape: {\n      shape: \"circle\",\n      shapeProps: {\n        fill: \"yellow\",\n        r: 10\n      }\n    },\n    children: [{\n      name: \"Level 3: A\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"red\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 1\n      }, {\n        x: 3,\n        y: 7\n      }, {\n        x: 4,\n        y: 21\n      }]\n    }, {\n      name: \"Level 3: B\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"yellow\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 8\n      }, {\n        x: 2,\n        y: 6\n      }, {\n        x: 3,\n        y: 7\n      }, {\n        x: 4,\n        y: 9\n      }]\n    }, {\n      name: \"Level 3: C\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"yellow\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 10\n      }, {\n        x: 2,\n        y: 9\n      }, {\n        x: 3,\n        y: 8\n      }, {\n        x: 4,\n        y: 7\n      }]\n    }]\n  }]\n}];\n\nconst TreeComponent = () => {\n  const _ref = [{\n    name: \"Undefined\"\n  }],\n        nodes = _ref[0],\n        setNodes = _ref[1];\n  useEffect(() => {\n    fetch(\"http://192.168.43.70:5000/transfer\", {\n      method: \"GET\"\n    }).then(function (response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n\n      return response.json();\n    }).then(function (data) {\n      const newNodes = [{\n        name: \"hello\",\n        children: [{\n          name: \"hi\"\n        }]\n      }];\n      console.log(data);\n      data.forEach(element => {\n        fetch(\"http://192.168.43.70:5000/transfers\", {\n          method: \"POST\",\n          body: element\n        }).then(function (response) {\n          if (response.status >= 400) {\n            throw new Error(\"Bad response from server\");\n          }\n\n          return response.json();\n        }).then(function (data) {\n          console.log(data);\n\n          const searchSender = el => {\n            if (el.name === \"bye\") {\n              console.log(el.children.length);\n            } else if (el.children.length > 0) {\n              el.children.forEach(edge => {\n                console.log(edge.name);\n              });\n            }\n          };\n\n          newNodes.forEach(node => {\n            searchSender(node);\n          });\n        });\n      });\n    });\n  }, []); //addArrayEntry();\n\n  return React.createElement(\"div\", {\n    className: styles.tree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(CenteredTree, {\n    data: myTreeData,\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }), \";\");\n};\n\nexport default TreeComponent;","map":{"version":3,"sources":["/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/TreeComponent.js"],"names":["React","useEffect","useState","Tree","styles","CenteredTree","exportDefaultSpecifier","checkSender","el","name","myTreeData","nodeSvgShape","shape","shapeProps","fill","r","children","prestigeGraph","x","y","TreeComponent","nodes","setNodes","fetch","method","then","response","status","Error","json","data","newNodes","console","log","forEach","element","body","searchSender","length","edge","node","tree"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport styles from \"./TreeComponent.module.css\";\nimport CenteredTree from \"./CenteredTree\";\nimport { exportDefaultSpecifier } from \"@babel/types\";\n\nconst checkSender = el => {\n  if (el.name === \"Top Level\") {\n    return el;\n  }\n};\n\nconst myTreeData = [\n  {\n    name: \"Top Level\",\n    nodeSvgShape: {\n      shape: \"circle\",\n      shapeProps: {\n        fill: \"green\",\n        r: 10\n      }\n    },\n    children: [\n      {\n        name: \"Level 2: A\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"green\",\n            r: 10\n          }\n        },\n        prestigeGraph: [\n          {\n            x: 1,\n            y: 10\n          },\n          {\n            x: 2,\n            y: 20\n          },\n          {\n            x: 3,\n            y: 15\n          },\n          {\n            x: 4,\n            y: 30\n          }\n        ],\n        children: [\n          {\n            name: \"Level 3: A\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"orange\",\n                r: 10\n              }\n            },\n            children: [\n              {\n                name: \"Level 4: A\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"orange\",\n                    r: 10\n                  }\n                }\n              }\n            ],\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 7\n              },\n              {\n                x: 2,\n                y: 18\n              },\n              {\n                x: 3,\n                y: 11\n              },\n              {\n                x: 4,\n                y: 14\n              }\n            ]\n          },\n          {\n            name: \"Level 3: B\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"yellow\",\n                r: 10\n              }\n            },\n            children: [\n              {\n                name: \"Level 4: B\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"red\",\n                    r: 10\n                  }\n                }\n              },\n              {\n                name: \"Level 4: C\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"yellow\",\n                    r: 10\n                  }\n                }\n              },\n              {\n                name: \"Level 4: D\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"orange\",\n                    r: 10\n                  }\n                }\n              }\n            ],\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 2\n              },\n              {\n                x: 2,\n                y: 6\n              },\n              {\n                x: 3,\n                y: 12\n              },\n              {\n                x: 4,\n                y: 20\n              }\n            ]\n          },\n          {\n            name: \"Level 3: C\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"orange\",\n                r: 10\n              }\n            },\n            children: [\n              {\n                name: \"Level 4: E\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"red\",\n                    r: 10\n                  }\n                }\n              },\n              {\n                name: \"Level 4: F\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"yellow\",\n                    r: 10\n                  }\n                }\n              },\n              {\n                name: \"Level 4: G\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"orange\",\n                    r: 10\n                  }\n                }\n              },\n              {\n                name: \"Level 4: H\",\n                nodeSvgShape: {\n                  shape: \"circle\",\n                  shapeProps: {\n                    fill: \"orange\",\n                    r: 10\n                  }\n                }\n              }\n            ],\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 1\n              },\n              {\n                x: 2,\n                y: 1\n              },\n              {\n                x: 3,\n                y: 15\n              },\n              {\n                x: 4,\n                y: 16\n              }\n            ]\n          }\n        ]\n      },\n      {\n        name: \"Level 2: B\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"yellow\",\n            r: 10\n          }\n        },\n        children: [\n          {\n            name: \"Level 3: A\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"red\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 2\n              },\n              {\n                x: 2,\n                y: 1\n              },\n              {\n                x: 3,\n                y: 7\n              },\n              {\n                x: 4,\n                y: 21\n              }\n            ]\n          },\n          {\n            name: \"Level 3: B\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"yellow\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 8\n              },\n              {\n                x: 2,\n                y: 6\n              },\n              {\n                x: 3,\n                y: 7\n              },\n              {\n                x: 4,\n                y: 9\n              }\n            ]\n          },\n          {\n            name: \"Level 3: C\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"yellow\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 10\n              },\n              {\n                x: 2,\n                y: 9\n              },\n              {\n                x: 3,\n                y: 8\n              },\n              {\n                x: 4,\n                y: 7\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\n\nconst TreeComponent = () => {\n  const [nodes, setNodes] = [{ name: \"Undefined\" }];\n\n  useEffect(() => {\n    fetch(\"http://192.168.43.70:5000/transfer\", {\n      method: \"GET\"\n    })\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data) {\n        const newNodes = [{ name: \"hello\", children: [{ name: \"hi\" }] }];\n        console.log(data);\n        data.forEach(element => {\n          fetch(\"http://192.168.43.70:5000/transfers\", {\n            method: \"POST\",\n            body: element\n          })\n            .then(function(response) {\n              if (response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n              }\n\n              return response.json();\n            })\n            .then(function(data) {\n              console.log(data);\n\n              const searchSender = el => {\n                if (el.name === \"bye\") {\n                  console.log(el.children.length);\n                } else if (el.children.length > 0) {\n                  el.children.forEach(edge => {\n                    console.log(edge.name);\n                  });\n                }\n              };\n              newNodes.forEach(node => {\n                searchSender(node);\n              });\n            });\n        });\n      });\n  }, []);\n\n  //addArrayEntry();\n  return (\n    <div className={styles.tree}>\n      <CenteredTree data={myTreeData} orientation=\"vertical\" />;\n    </div>\n  );\n};\n\nexport default TreeComponent;\n"]},"metadata":{},"sourceType":"module"}