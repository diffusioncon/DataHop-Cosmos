{"ast":null,"code":"var _jsxFileName = \"/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/CenteredTree.js\";\nimport React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport { Redirect } from \"react-router-dom\";\nconst containerStyles = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nexport default class CenteredTree extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.setRedirect = node => {\n      this.setState({\n        redirectApproved: true\n      });\n      console.log(\"True\");\n    };\n\n    this.renderRedirect = node => {\n      if (this.state.redirectApproved) {\n        console.log(node);\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/details\",\n            state: {\n              nodeName: \"Redirected\"\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    this.setState({\n      translate: {\n        x: dimensions.width / 2,\n        y: 50\n      },\n      redirectApproved: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: containerStyles,\n      ref: tc => this.treeContainer = tc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(Tree, {\n      data: this.props.data,\n      translate: this.state.translate,\n      orientation: \"vertical\",\n      collapsible: false,\n      onClick: nodeData => this.setRedirect(nodeData),\n      styles: {\n        nodes: {\n          node: {\n            circle: {\n              fill: \"red\"\n            }\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/CenteredTree.js"],"names":["React","Tree","Redirect","containerStyles","width","height","CenteredTree","PureComponent","state","setRedirect","node","setState","redirectApproved","console","log","renderRedirect","pathname","nodeName","componentDidMount","dimensions","treeContainer","getBoundingClientRect","translate","x","y","render","tc","props","data","nodeData","nodes","circle","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE,MADe;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAxB;AAKA,eAAe,MAAMC,YAAN,SAA2BN,KAAK,CAACO,aAAjC,CAA+C;AAAA;AAAA;AAAA,SAC5DC,KAD4D,GACpD,EADoD;;AAAA,SAc5DC,WAd4D,GAc9CC,IAAI,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAjB2D;;AAAA,SAmB5DC,cAnB4D,GAmB3CL,IAAI,IAAI;AACvB,UAAI,KAAKF,KAAL,CAAWI,gBAAf,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,eACE,oBAAC,QAAD;AACE,UAAA,EAAE,EAAE;AAAEM,YAAAA,QAAQ,EAAE,UAAZ;AAAwBR,YAAAA,KAAK,EAAE;AAAES,cAAAA,QAAQ,EAAE;AAAZ;AAA/B,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AACF,KA5B2D;AAAA;;AAG5DC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,UAAU,GAAG,KAAKC,aAAL,CAAmBC,qBAAnB,EAAnB;AACA,SAAKV,QAAL,CAAc;AACZW,MAAAA,SAAS,EAAE;AACTC,QAAAA,CAAC,EAAEJ,UAAU,CAACf,KAAX,GAAmB,CADb;AAEToB,QAAAA,CAAC,EAAE;AAFM,OADC;AAKZZ,MAAAA,gBAAgB,EAAE;AALN,KAAd;AAOD;;AAkBDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAEtB,eAAZ;AAA6B,MAAA,GAAG,EAAEuB,EAAE,IAAK,KAAKN,aAAL,GAAqBM,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,cAAL,EADH,EAEE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,KAAKY,KAAL,CAAWC,IADnB;AAEE,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWc,SAFxB;AAGE,MAAA,WAAW,EAAE,UAHf;AAIE,MAAA,WAAW,EAAE,KAJf;AAKE,MAAA,OAAO,EAAEO,QAAQ,IAAI,KAAKpB,WAAL,CAAiBoB,QAAjB,CALvB;AAME,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AAAEpB,UAAAA,IAAI,EAAE;AAAEqB,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR;AAAV;AAAR;AADD,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAeD;;AA9C2D","sourcesContent":["import React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport { Redirect } from \"react-router-dom\";\n\nconst containerStyles = {\n  width: \"100%\",\n  height: \"100vh\"\n};\n\nexport default class CenteredTree extends React.PureComponent {\n  state = {};\n\n  componentDidMount() {\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    this.setState({\n      translate: {\n        x: dimensions.width / 2,\n        y: 50\n      },\n      redirectApproved: false\n    });\n  }\n\n  setRedirect = node => {\n    this.setState({ redirectApproved: true });\n    console.log(\"True\");\n  };\n\n  renderRedirect = node => {\n    if (this.state.redirectApproved) {\n      console.log(node);\n      return (\n        <Redirect\n          to={{ pathname: \"/details\", state: { nodeName: \"Redirected\" } }}\n        />\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div style={containerStyles} ref={tc => (this.treeContainer = tc)}>\n        {this.renderRedirect()}\n        <Tree\n          data={this.props.data}\n          translate={this.state.translate}\n          orientation={\"vertical\"}\n          collapsible={false}\n          onClick={nodeData => this.setRedirect(nodeData)}\n          styles={{\n            nodes: { node: { circle: { fill: \"red\" } } }\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}