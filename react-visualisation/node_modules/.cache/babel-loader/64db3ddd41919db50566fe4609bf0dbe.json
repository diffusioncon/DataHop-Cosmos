{"ast":null,"code":"var _jsxFileName = \"/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/TreeComponent.js\";\nimport React, { useEffect } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport styles from \"./TreeComponent.module.css\";\nimport CenteredTree from \"./CenteredTree\";\nconst fetchedData = [\"receiving1\", \"sending1\", [{\n  x: 1,\n  y: 10\n}, {\n  x: 2,\n  y: 20\n}, {\n  x: 3,\n  y: 15\n}, {\n  x: 4,\n  y: 30\n}], \"receiving2\", \"sending2\", [{\n  x: 1,\n  y: 7\n}, {\n  x: 2,\n  y: 18\n}, {\n  x: 3,\n  y: 11\n}, {\n  x: 4,\n  y: 14\n}]];\nconst newArray = [{\n  name: \"topSender\",\n  children: []\n}];\n\nconst checkSender = el => {\n  if (el.name === \"Top Level\") {\n    return el;\n  }\n};\n\nconst myTreeData = [{\n  name: \"Top Level\",\n  attributes: {\n    key: \"value\"\n  },\n  nodeSvgShape: {\n    shape: \"circle\",\n    shapeProps: {\n      fill: \"green\",\n      r: 10\n    }\n  },\n  children: [{\n    name: \"Level 2: A\",\n    nodeSvgShape: {\n      shape: \"circle\",\n      shapeProps: {\n        fill: \"green\",\n        r: 10\n      }\n    },\n    prestigeGraph: [{\n      x: 1,\n      y: 10\n    }, {\n      x: 2,\n      y: 20\n    }, {\n      x: 3,\n      y: 15\n    }, {\n      x: 4,\n      y: 30\n    }],\n    children: [{\n      name: \"Level 3: A\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"orange\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 7\n      }, {\n        x: 2,\n        y: 18\n      }, {\n        x: 3,\n        y: 11\n      }, {\n        x: 4,\n        y: 14\n      }]\n    }, {\n      name: \"Level 3: B\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"yellow\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 6\n      }, {\n        x: 3,\n        y: 12\n      }, {\n        x: 4,\n        y: 20\n      }]\n    }, {\n      name: \"Level 3: C\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"orange\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 1\n      }, {\n        x: 2,\n        y: 1\n      }, {\n        x: 3,\n        y: 15\n      }, {\n        x: 4,\n        y: 16\n      }]\n    }]\n  }, {\n    name: \"Level 2: B\",\n    nodeSvgShape: {\n      shape: \"circle\",\n      shapeProps: {\n        fill: \"yellow\",\n        r: 10\n      }\n    },\n    children: [{\n      name: \"Level 3: A\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"red\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 1\n      }, {\n        x: 3,\n        y: 7\n      }, {\n        x: 4,\n        y: 21\n      }]\n    }, {\n      name: \"Level 3: B\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"yellow\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 8\n      }, {\n        x: 2,\n        y: 6\n      }, {\n        x: 3,\n        y: 7\n      }, {\n        x: 4,\n        y: 9\n      }]\n    }, {\n      name: \"Level 3: C\",\n      nodeSvgShape: {\n        shape: \"circle\",\n        shapeProps: {\n          fill: \"yellow\",\n          r: 10\n        }\n      },\n      prestigeGraph: [{\n        x: 1,\n        y: 10\n      }, {\n        x: 2,\n        y: 9\n      }, {\n        x: 3,\n        y: 8\n      }, {\n        x: 4,\n        y: 7\n      }]\n    }]\n  }]\n}];\n\nconst TreeComponent = () => {\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\", {\n      method: \"GET\"\n    }).then(function (response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n\n      return response.json();\n    }).then(function (data) {\n      console.log(\"Fetching\");\n    });\n  }, []); //addArrayEntry();\n\n  return React.createElement(\"div\", {\n    className: styles.tree,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(CenteredTree, {\n    data: myTreeData,\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }), \";\");\n};\n\nexport default TreeComponent;","map":{"version":3,"sources":["/Users/quintenvanbreugel/Workspace/amazingcosmosapp/src/components/TreeComponent.js"],"names":["React","useEffect","Tree","styles","CenteredTree","fetchedData","x","y","newArray","name","children","checkSender","el","myTreeData","attributes","key","nodeSvgShape","shape","shapeProps","fill","r","prestigeGraph","TreeComponent","fetch","method","then","response","status","Error","json","data","console","log","tree"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport styles from \"./TreeComponent.module.css\";\nimport CenteredTree from \"./CenteredTree\";\n\nconst fetchedData = [\n  \"receiving1\",\n  \"sending1\",\n  [\n    {\n      x: 1,\n      y: 10\n    },\n    {\n      x: 2,\n      y: 20\n    },\n    {\n      x: 3,\n      y: 15\n    },\n    {\n      x: 4,\n      y: 30\n    }\n  ],\n  \"receiving2\",\n  \"sending2\",\n  [\n    {\n      x: 1,\n      y: 7\n    },\n    {\n      x: 2,\n      y: 18\n    },\n    {\n      x: 3,\n      y: 11\n    },\n    {\n      x: 4,\n      y: 14\n    }\n  ]\n];\n\nconst newArray = [{ name: \"topSender\", children: [] }];\n\nconst checkSender = el => {\n  if (el.name === \"Top Level\") {\n    return el;\n  }\n};\n\nconst myTreeData = [\n  {\n    name: \"Top Level\",\n    attributes: {\n      key: \"value\"\n    },\n    nodeSvgShape: {\n      shape: \"circle\",\n      shapeProps: {\n        fill: \"green\",\n        r: 10\n      }\n    },\n    children: [\n      {\n        name: \"Level 2: A\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"green\",\n            r: 10\n          }\n        },\n        prestigeGraph: [\n          {\n            x: 1,\n            y: 10\n          },\n          {\n            x: 2,\n            y: 20\n          },\n          {\n            x: 3,\n            y: 15\n          },\n          {\n            x: 4,\n            y: 30\n          }\n        ],\n        children: [\n          {\n            name: \"Level 3: A\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"orange\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 7\n              },\n              {\n                x: 2,\n                y: 18\n              },\n              {\n                x: 3,\n                y: 11\n              },\n              {\n                x: 4,\n                y: 14\n              }\n            ]\n          },\n          {\n            name: \"Level 3: B\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"yellow\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 2\n              },\n              {\n                x: 2,\n                y: 6\n              },\n              {\n                x: 3,\n                y: 12\n              },\n              {\n                x: 4,\n                y: 20\n              }\n            ]\n          },\n          {\n            name: \"Level 3: C\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"orange\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 1\n              },\n              {\n                x: 2,\n                y: 1\n              },\n              {\n                x: 3,\n                y: 15\n              },\n              {\n                x: 4,\n                y: 16\n              }\n            ]\n          }\n        ]\n      },\n      {\n        name: \"Level 2: B\",\n        nodeSvgShape: {\n          shape: \"circle\",\n          shapeProps: {\n            fill: \"yellow\",\n            r: 10\n          }\n        },\n        children: [\n          {\n            name: \"Level 3: A\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"red\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 2\n              },\n              {\n                x: 2,\n                y: 1\n              },\n              {\n                x: 3,\n                y: 7\n              },\n              {\n                x: 4,\n                y: 21\n              }\n            ]\n          },\n          {\n            name: \"Level 3: B\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"yellow\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 8\n              },\n              {\n                x: 2,\n                y: 6\n              },\n              {\n                x: 3,\n                y: 7\n              },\n              {\n                x: 4,\n                y: 9\n              }\n            ]\n          },\n          {\n            name: \"Level 3: C\",\n            nodeSvgShape: {\n              shape: \"circle\",\n              shapeProps: {\n                fill: \"yellow\",\n                r: 10\n              }\n            },\n            prestigeGraph: [\n              {\n                x: 1,\n                y: 10\n              },\n              {\n                x: 2,\n                y: 9\n              },\n              {\n                x: 3,\n                y: 8\n              },\n              {\n                x: 4,\n                y: 7\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\n\nconst TreeComponent = () => {\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\", {\n      method: \"GET\"\n    })\n      .then(function(response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n        return response.json();\n      })\n      .then(function(data) {\n        console.log(\"Fetching\");\n      });\n  }, []);\n\n  //addArrayEntry();\n  return (\n    <div className={styles.tree}>\n      <CenteredTree data={myTreeData} orientation=\"vertical\" />;\n    </div>\n  );\n};\n\nexport default TreeComponent;\n"]},"metadata":{},"sourceType":"module"}